qbittorrent:
  replicaCount: 1

  image:
    registry: ghcr.io
    repository: home-operations/qbittorrent
    pullPolicy: IfNotPresent
    # -- Overrides the image tag whose default is the chart appVersion.
    tag: ""
    sha: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  # -- Deployment strategy
  strategy:
    type: Recreate

  # -- Environment variables to add to the qbittorrent pods
  extraEnv: []
  # -- Environment variables from secrets or configmaps to add to the qbittorrent pods
  extraEnvFrom: []

  serviceAccount:
    # -- Specifies whether a service account should be created
    create: true
    # -- Automatically mount a ServiceAccount's API credentials?
    automount: true
    # -- Annotations to add to the service account
    annotations: {}
    # -- The name of the service account to use.
    # -- If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}
  podLabels: {}

  podSecurityContext:
    fsGroup: 65534
    fsGroupChangePolicy: OnRootMismatch

  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    privileged: false
    runAsUser: 65534
    runAsGroup: 65534
    seccompProfile:
      type: RuntimeDefault

  service:
    web:
      type: ClusterIP
      port: 80
      # -- Annotations to add to the web service
      annotations: {}
    torrent:
      type: ClusterIP
      port: 8388
      # -- Annotations to add to the torrent service
      annotations: {}

  # -- Creating PVC to store configuration
  config:
    persistence:
      enabled: true
      # -- Size of persistent disk
      size: 5Gi
      # -- Annotations for PVCs
      annotations: {}
      # -- Access modes of persistent disk
      accessModes:
        - ReadWriteOnce
      # -- Config name
      name: ""
      # -- Name of the permanent volume to reference in the claim.
      # Can be used to bind to existing volumes.
      volumeName: ""

  ingress:
    enabled: false
    ingressClassName: ""
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # -- Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # -- Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: {}

  tolerations: []

  affinity: {}

  # -- Gluetun sidecar
  gluetun:
    enabled: false
    image:
      registry: docker.io
      repository: qmcgaw/gluetun
      pullPolicy: IfNotPresent
      tag: "v3.40.0"
      sha: ""
    extraEnv: []
    extraEnvFrom: []
    volumeMounts: []
    securityContext:
      capabilities:
        add:
          - NET_ADMIN
    resources:
      limits:
        squat.ai/tun: 1

  # -- Prometheus-qbittorrent-exporter sidecar
  prometheusQbittorrentExporter:
    enabled: false
    image:
      registry: ghcr.io
      repository: esanchezm/prometheus-qbittorrent-exporter
      pullPolicy: IfNotPresent
      tag: "v1.6.0"
      sha: ""
    extraEnv: []
    extraEnvFrom: []
    volumeMounts: []
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      privileged: false
      runAsUser: 1000
      runAsGroup: 1000
      seccompProfile:
        type: RuntimeDefault

    serviceMonitor:
      # -- If true, a ServiceMonitor CRD is created for a prometheus operator
      enabled: false
      path: /metrics
      # -- If set create the `ServiceMonitor` in an alternate namespace.
      namespace:
      labels: {}
      interval: 30s
      scheme: http
      tlsConfig: {}
      scrapeTimeout: 30s
      relabelings: []
      metricRelabelings: []
      targetLabels: []
      service:
        # -- Metrics service port to scrape
        port: 8100

  # -- Extra containers to add to qbittorrent deployment
  extraContainers: []

# -- Generic device plugin
# -- https://github.com/squat/generic-device-plugin
# -- A Kubernetes device plugin to schedule generic Linux devices (used for /dev/tun)
genericDevicePlugin:
  # -- Enable generic device plugin daemonset
  enabled: true

  image:
    registry: ghcr.io
    repository: squat/generic-device-plugin
    # -- Overrides the image tag whose default is the chart appVersion.
    tag: "36bfc606bba2064de6ede0ff2764cbb52edff70d"
    sha: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  # -- Deployment strategy
  updateStrategy:
    type: RollingUpdate

  # -- Environment variables to add to the qbittorrent pods
  extraEnv: []
  # -- Environment variables from secrets or configmaps to add to the qbittorrent pods
  extraEnvFrom: []

  serviceAccount:
    # -- Specifies whether a service account should be created
    create: true
    # -- Automatically mount a ServiceAccount's API credentials?
    automount: true
    # -- Annotations to add to the service account
    annotations: {}
    # -- The name of the service account to use.
    # -- If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}
  podLabels: {}

  podSecurityContext: {}

  securityContext:
    privileged: true

  priorityClassName: system-node-critical

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

  serviceMonitor:
    # -- If true, a ServiceMonitor CRD is created for a prometheus operator
    enabled: false
    path: /metrics
    # -- If set create the `ServiceMonitor` in an alternate namespace.
    namespace:
    labels: {}
    interval: 30s
    scheme: http
    tlsConfig: {}
    scrapeTimeout: 30s
    relabelings: []
    metricRelabelings: []
    targetLabels: []
    service:
      # -- Metrics service port to scrape
      port: 8080
